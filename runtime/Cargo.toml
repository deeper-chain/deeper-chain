[package]
name = "node-runtime"
version = "2.0.1"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"
build = "build.rs"
license = "Apache-2.0"
homepage = "https://substrate.dev"
repository = "https://github.com/paritytech/polkadot-sdk/"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]

# third-party dependencies
codec = { workspace = true, features = ["derive","max-encoded-len"] }
scale-info = { workspace = true, features = ["derive"] }
serde = { workspace = true, optional = true }
static_assertions = { workspace = true }
hex-literal = { workspace = true, optional = true }
log = { workspace = true }

# primitives
sp-authority-discovery = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-block-builder = { workspace = true }
sp-inherents = { workspace = true }
node-primitives = { workspace = true }
sp-offchain = { workspace = true }
sp-core = { workspace = true }
sp-std = { workspace = true }
sp-api = { workspace = true }
sp-runtime = { workspace = true }
sp-staking = { workspace = true }
sp-keyring = { workspace = true, optional = true }
sp-session = { workspace = true }
sp-version = { workspace = true }
sp-io = {  workspace = true }

# frontier primitives
fp-rpc = { workspace = true }
fp-evm = { workspace = true }
fp-self-contained = { workspace = true }

# frame dependencies
frame-executive = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-assets = { workspace = true }
pallet-authority-discovery = { workspace = true }
pallet-authorship = { workspace = true }
pallet-babe = { workspace = true }
pallet-balances = { workspace = true }
pallet-bounties = { workspace = true }
pallet-child-bounties = { workspace = true }
pallet-collective = { workspace = true }
pallet-contracts = { workspace = true }
pallet-contracts-primitives = { workspace = true }
pallet-democracy = { workspace = true }
pallet-elections-phragmen = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-im-online = { workspace = true }
pallet-indices = { workspace = true }
pallet-identity = { workspace = true }
pallet-lottery = { workspace = true }
pallet-membership = { workspace = true }
pallet-multisig = { workspace = true }
pallet-offences = { workspace = true }
pallet-preimage = { workspace = true }
pallet-proxy = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-recovery = { workspace = true }
pallet-session = { workspace = true, features = ["historical"] }
pallet-staking = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-society = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-tips = { workspace = true }
pallet-treasury = { workspace = true }
pallet-utility = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-vesting = { workspace = true }
pallet-micropayment = { workspace = true }
pallet-credit = { workspace = true }
pallet-deeper-node = { workspace = true }
pallet-credit-accumulation = { workspace = true }
pallet-operation = { workspace = true }
pallet-uniques = { workspace = true }
pallet-statement = { workspace = true }
pallet-tx-pause = { workspace = true }

pallet-user-privileges = { workspace = true }
pallet-adsc = { workspace = true }

# frontier frame dependencies
libsecp256k1 = { workspace = true, optional = true }
pallet-ethereum = {  workspace = true }
pallet-evm = {  workspace = true }
pallet-dynamic-fee = {  workspace = true }
pallet-evm-precompile-simple = {  workspace = true }
pallet-evm-precompile-sha3fips = {  workspace = true }
pallet-evm-precompile-modexp = {  workspace = true }
pallet-evm-precompile-blake2 = {  workspace = true }
pallet-evm-precompile-bn128 = {  workspace = true }
pallet-evm-precompile-dispatch = {  workspace = true }
pallet-evm-precompile-curve25519 = {  workspace = true }
pallet-evm-precompile-ed25519 = {  workspace = true }
pallet-base-fee = {  workspace = true }
pallet-evm-precompile-credit = {  workspace = true }
sp-mmr-primitives = { workspace = true }
sp-statement-store = { workspace = true }
sp-transaction-pool = { workspace = true }

[build-dependencies]
substrate-wasm-builder = { workspace = true, default-features = true }

[dev-dependencies]
sp-io = { workspace = true, default-features = true }

[features]
default = ["std"]
with-tracing = ["frame-executive/with-tracing"]
std = [
	"sp-authority-discovery/std",
	"pallet-assets/std",
	"frame-system-benchmarking?/std",
	"frame-benchmarking?/std",
	"pallet-authority-discovery/std",
	"pallet-authorship/std",
	"sp-consensus-babe/std",
	"pallet-babe/std",
	"pallet-balances/std",
	"pallet-bounties/std",
	"pallet-child-bounties/std",
	"sp-block-builder/std",
	"codec/std",
	"scale-info/std",
	"pallet-collective/std",
	"pallet-contracts/std",
	"pallet-contracts-primitives/std",
	"pallet-democracy/std",
	"pallet-elections-phragmen/std",
	"frame-executive/std",
	"pallet-grandpa/std",
	"pallet-im-online/std",
	"pallet-indices/std",
	"sp-inherents/std",
	"pallet-lottery/std",
	"pallet-membership/std",
	"pallet-multisig/std",
	"pallet-identity/std",
	"pallet-scheduler/std",
	"node-primitives/std",
	"sp-mmr-primitives/std",
	"sp-offchain/std",
	"pallet-offences/std",
	"pallet-preimage/std",
	"pallet-proxy/std",
	"sp-core/std",
	"pallet-insecure-randomness-collective-flip/std",
	"sp-std/std",
	"serde",
	"pallet-session/std",
	"sp-api/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-staking/std",
	"pallet-staking/std",
	"sp-keyring",
	"sp-session/std",
	"pallet-sudo/std",
	"frame-support/std",
	"frame-benchmarking/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"pallet-timestamp/std",
	"pallet-tips/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-treasury/std",
	"sp-transaction-pool/std",
	"pallet-utility/std",
	"sp-version/std",
	"pallet-society/std",
	"pallet-recovery/std",
	"pallet-vesting/std",
	"pallet-micropayment/std",
	"pallet-credit/std",
	"pallet-deeper-node/std",
	"pallet-credit-accumulation/std",
	"pallet-operation/std",
	"pallet-user-privileges/std",
	"pallet-uniques/std",
	"pallet-adsc/std",
	"fp-rpc/std",
	"fp-self-contained/std",
	"pallet-ethereum/std",
	"pallet-evm/std",
	"pallet-dynamic-fee/std",
	"pallet-evm-precompile-simple/std",
	"pallet-evm-precompile-sha3fips/std",
	"pallet-base-fee/std",
	"sp-statement-store/std",
	"pallet-tx-pause/std",
	"pallet-statement/std",
	"libsecp256k1/std",
]
runtime-benchmarks = [
	"frame-benchmarking",
	"libsecp256k1/hmac",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-babe/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-contracts/runtime-benchmarks",
	"pallet-democracy/runtime-benchmarks",
	"pallet-elections-phragmen/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"pallet-indices/runtime-benchmarks",
	"pallet-lottery/runtime-benchmarks",
	"pallet-multisig/runtime-benchmarks",
	"pallet-preimage/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-scheduler/runtime-benchmarks",
	"pallet-society/runtime-benchmarks",
	"pallet-staking/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-tips/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-utility/runtime-benchmarks",
	"pallet-vesting/runtime-benchmarks",
	"pallet-credit/runtime-benchmarks",
	"pallet-deeper-node/runtime-benchmarks",
	"pallet-micropayment/runtime-benchmarks",
	"pallet-credit-accumulation/runtime-benchmarks",
	"pallet-operation/runtime-benchmarks",
	"pallet-user-privileges/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"hex-literal",
	"pallet-ethereum/runtime-benchmarks",
	"pallet-evm/runtime-benchmarks",
	"pallet-adsc/runtime-benchmarks",
	"pallet-tx-pause/runtime-benchmarks",
]

testnet = []
fast-runtime = []
